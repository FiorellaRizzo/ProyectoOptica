@page "/api/cita/editar/{citaId:int}"
@inject IHttpServicio http
@inject NavigationManager navigationManager


<h3>Editar Cita</h3>

<h1>@pepe</h1>

<EditForm Model="cita" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>ClienteID</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@cita.ClienteId" />
            <ValidationMessage For="@(() => cita.ClienteId)" />
        </div>
    </div>

    
        <div class="form-group">
        <label>DisponibilidadID</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@cita.DisponibilidadId" />
            <ValidationMessage For="@(() => cita.DisponibilidadId)" />
        </div>
    </div>

        <div class="form-group">
            <label>Fecha de Disponibilidad</label>
            <div>
                <InputDate class="form-control" @bind-Value="@cita.FechaDisponibilidad" />
                <ValidationMessage For="@(() => cita.FechaDisponibilidad)" />
        </div>
    </div>

        <div class="form-group">
            <label>Horario Disponible</label>
            <div>
                <InputDate class="form-control" @bind-Value="@cita.HoraDisponible" />
                <ValidationMessage For="@(() => cita.HoraDisponible)" />
            </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter] public int citaId{ get; set; }
    private Cita cita = new Cita();

    string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Cita>($"api/cita/{citaId}");

        if (!respuesta.Error)
        {
            cita = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/cita");
        }
    }



    private async Task Grabar()
    {
        //cita.Personas = new List<Persona>();

        var httpRespuesta = await http.Put<Cita>($"api/cita/{citaId}", cita);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/cita");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/cita");
    }
}
